AWSTemplateFormatVersion: 2010-09-09
Description: Create a VPC Network with subnets, ec2 hosts configured with Security groups and other resources to interact.
Resources:
  VPC:
    Type: 'AWS::EC2::VPC'
    Properties: 
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: 'true'
      EnableDnsHostName: 'true'
      Tags:
       - Key: Environment
         Value: Production
       - Key: Owner
         Value: Samantha
       - Type:
         Value: Production-VPC

#One Public Subnet
  PublicSubnet:
    Type: 'AWS::EC2::Subnet'
    Properties: 
      VpcId: 
        Ref: myVPC
      CidrBlock: 10.0.1.0/24
      AvailabilityZone: "us-east-1b"
      MapPublicIpOnLaunch: true
      Tags:
      - Key: Environment
        Value: production
      - Key: Owner
        Value: Samantha
      - Type:
        Value: Public-Subnet
    
#One Private Subnet
  PrivateSubnet:
    Type: 'AWS::EC2::Subnet'
    Properties: 
      VpcId: 
        Ref: myVPC
      CidrBlock: 10.0.2.0/24
      AvailabilityZone: "us-east-1b"
      Tags:
      - Key: Environment
        Value: production
      - Key: Owner
        Value: Samantha
      - Type:
        Value: Public-Subnet

#JumpBox Server Creation
  JumpBox:
    Type: 'AWS::EC2::Instance'
    Properties: 
    ImageId: ami-0d5eff06f840b45e9
    InstanceType: t2.micro
      NetworkInterfaces:
        - SubnetId: !Ref PublicSubnet
        - SubnetId: !Ref PublicSubnet
        - SubnetId: !Ref PublicSubnet
        - SubnetId: !Ref PublicSubnet
        - SubnetId: !Ref PublicSubnet
        - SubnetId: !Ref PublicSubnet
        - SubnetId: !Ref PublicSubnet
        - SubnetId: !Ref PublicSubnet
        - SubnetId: !Ref PublicSubnet
      SecurityGroupIds:
        - !Ref JumpBoxSG

#AppInstance Server Creation
  AppInstance:
    Type: 'AWS::EC2::Instance'
    Properties:
    ImageId: ami-0d5eff06f840b45e9
    InstanceType: t2.micro
      NetworkInterfaces:
        - SubnetId: !Ref PrivateSubnet
        - SubnetId: !Ref PrivateSubnet
        - SubnetId: !Ref PrivateSubnet
        - SubnetId: !Ref PrivateSubnet
        - SubnetId: !Ref PrivateSubnet
        - SubnetId: !Ref PrivateSubnet
        - SubnetId: !Ref PrivateSubnet
        - SubnetId: !Ref PrivateSubnet
      SecurityGroupIds:
        - !Ref AppInstanceSG

  JumpBoxSG:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupName: !Join 
        - '-'
        - - JumpBoxSG
      GroupDescription: Allow HTTP/HTTPS and SSH outbound traffic
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: null
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 81a4e7d1-2ce3-453a-85dd-ef8cb50544e2
  AppInstanceSG:
    Type: 'AWS::EC2::SecurityGroup'
    Properties: {}
    Metadata:
      'AWS::CloudFormation::Designer':
        id: d892379c-f8e4-4062-8d3e-e12acd347828
  PublicRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties: {}
    Metadata:
      'AWS::CloudFormation::Designer':
        id: c822d943-5196-4ed0-979a-9373dc1c698a
    DependsOn:
      - NATGateway
  PrivateRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties: {}
    Metadata:
      'AWS::CloudFormation::Designer':
        id: b0c2b3e4-de7a-4e32-b483-912a6b8746fb
    DependsOn:
      - NATGateway
  NATGateway:
    Type: 'AWS::EC2::NatGateway'
    Properties: {}
    Metadata:
      'AWS::CloudFormation::Designer':
        id: e97fef3e-4331-47e4-9747-26b642195078
